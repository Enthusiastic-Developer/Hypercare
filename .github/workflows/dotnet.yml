name: .NET with Database Connection Check

on:
  push:
    branches: ["development"]
  pull_request_target:
    branches: ["development"]

jobs:
  database-connection-check:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SQL Proxy
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@v2
        with:
          version: '340.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Check Database Connection
        run: |
          # Replace with your actual values
          INSTANCE_CONNECTION_NAME="tokyo-drake-409307:us-central1:hypercare404"
          DB_USER="sqlserver"
          DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          DB_NAME="HYPERCARE_INIT"
          
          # Start Cloud SQL Proxy in the background
          ./cloud_sql_proxy -instances=$INSTANCE_CONNECTION_NAME=tcp:5432 &
          PROXY_PID=$!
          
          # Wait for Cloud SQL Proxy to start
          sleep 5
          
          # Attempt to connect to the database
          if psql "host=127.0.0.1 user=$DB_USER password=$DB_PASSWORD dbname=$DB_NAME sslmode=disable" -c "SELECT 1;"; then
            echo "Database connection successful. Proceeding with tests."
          else
            echo "Database connection failed. Tests will be skipped."
            exit 1  # Exit with an error code to mark the job as failed
          fi
      - name: Stop Cloud SQL Proxy
        run: kill $PROXY_PID || true

  build-and-test:
    runs-on: ubuntu-latest
    needs: database-connection-check
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        working-directory: ./BackEnd
        run: dotnet restore

      - name: Build
        working-directory: ./BackEnd
        run: dotnet build --no-restore

      - name: Test
        working-directory: ./BackEnd
        run: dotnet test --no-build --verbosity normal

  comment-on-failure:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: failure()
    steps:
      - name: Debug Comment-on-Failure
        run: echo "Comment-on-Failure job is running."
      
      - name: Add comment to PR on failure
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"body": "CodeQL analysis failed. Please check the logs for details."}' \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments
